trigger:
  branches:
    include:
    - '*'

stages:
#- stage: Testing
  #jobs:
    #- template: ./.azure-pipelines/azure-pipelines-linux.yml
    #- template: ./.azure-pipelines/azure-pipelines-osx.yml
    #- template: ./.azure-pipelines/azure-pipelines-win.yml

- stage: Deploy
  # condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/'))
  jobs:
    - job:
      displayName: Deploy Docs and source
      pool:
        vmImage: ubuntu-latest
      steps:
        - script: echo '##vso[task.prependpath]$CONDA/bin'
          displayName: Add conda to PATH
        - script: |
            conda create --yes --quiet --name test python=$(python.version)
            eval "$(conda shell.bash hook)"
            conda activate test
            conda env list
            conda install --yes --quiet -c conda-forge numpy scipy matplotlib cython vtk properties vectormath pyvista
            pip install -r requirements_dev.txt
            pip install .
            git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
          displayName: building and installing deps
        - script: |
            eval "$(conda shell.bash hook)"
            echo $TWINE_USERNAME
            conda activate test
            source ./gl-ci-helpers/travis/setup_headless_display.sh
            cd docs
            make html
          displayName: building documentation
        - script: |
            eval "$(conda shell.bash hook)"
            conda activate test
            python setup.py sdist
            twine upload --repository testpypi dist/*
          displayName: Deploy source
    - job:
      displayName: Wheels
      strategy:
        matrix:
          win-Python36:
            python.version: '3.6'
          win-Python37:
            python.version: '3.7'
          win-Python38:
            python.version: '3.8'
      pool:
        vmImage: vs2017-win2016
      steps:
        - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
          displayName: Add conda to PATH
        - script: |
            echo %TWINE_USERNAME%
            conda create --yes --quiet --name build python=$(python.version) numpy cython twine
          displayName: Create Anaconda environment
        - script: |
            call activate build
            python setup.py bdist_wheel
          displayName: Build Wheel
        - script: |
            call activate build
            twine upload --repository testpypi dist/*
          displayName: Upload to PYPI
